package org.iot.dsa.dslink.jdbc;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import org.iot.dsa.node.action.ActionResult;
import org.iot.dsa.node.action.DSAction;

/**
 * Represents a prepared statement that can be used for queries.
 *
 * addParameter
 *
 * @author Aaron Hansen
 */
public class JDBCPreparedQuery extends AbstractPreparedStatement {

    ///////////////////////////////////////////////////////////////////////////
    // Class Fields
    ///////////////////////////////////////////////////////////////////////////

    ///////////////////////////////////////////////////////////////////////////
    // Instance Fields
    ///////////////////////////////////////////////////////////////////////////

    ///////////////////////////////////////////////////////////////////////////
    // Constructors
    ///////////////////////////////////////////////////////////////////////////

    ///////////////////////////////////////////////////////////////////////////
    // Public Methods
    ///////////////////////////////////////////////////////////////////////////

    ///////////////////////////////////////////////////////////////////////////
    // Protected Methods
    ///////////////////////////////////////////////////////////////////////////

    @Override
    protected ActionResult getResult(Connection conn,
                                     PreparedStatement stmt,
                                     DSAction action) {
        ResultSet res = null;
        try {
            res = stmt.executeQuery();
        } catch (SQLException e) {
            cleanClose(res, stmt, conn, this);
            throw new IllegalStateException("Query failed: " + e);
        }
        ActionResult act = null;
        try {
            act = new JDBCClosedTable(action, res, this);
        } catch (SQLException e) {
            cleanClose(res, stmt, conn, this);
            throw new IllegalStateException("Failed to retrieve data from database: " + e);
        }
        return act;
    }

    ///////////////////////////////////////////////////////////////////////////
    // Package Methods
    ///////////////////////////////////////////////////////////////////////////

    ///////////////////////////////////////////////////////////////////////////
    // Private Methods
    ///////////////////////////////////////////////////////////////////////////

    ///////////////////////////////////////////////////////////////////////////
    // Inner Classes
    ///////////////////////////////////////////////////////////////////////////

    ///////////////////////////////////////////////////////////////////////////
    // Initialization
    ///////////////////////////////////////////////////////////////////////////

}
